[{"C:\\Users\\조연제\\OneDrive\\바탕 화면\\BC\\Spring 2023\\Software Engineering\\pocketprof\\src\\index.js":"1","C:\\Users\\조연제\\OneDrive\\바탕 화면\\BC\\Spring 2023\\Software Engineering\\pocketprof\\src\\App.tsx":"2","C:\\Users\\조연제\\OneDrive\\바탕 화면\\BC\\Spring 2023\\Software Engineering\\pocketprof\\src\\components\\Header.tsx":"3","C:\\Users\\조연제\\OneDrive\\바탕 화면\\BC\\Spring 2023\\Software Engineering\\pocketprof\\src\\components\\GenFeedback.tsx":"4","C:\\Users\\조연제\\OneDrive\\바탕 화면\\BC\\Spring 2023\\Software Engineering\\pocketprof\\src\\components\\AnswerBoxes.tsx":"5","C:\\Users\\조연제\\OneDrive\\바탕 화면\\BC\\Spring 2023\\Software Engineering\\pocketprof\\src\\components\\UploadImg.tsx":"6"},{"size":560,"mtime":1699148561527,"results":"7","hashOfConfig":"8"},{"size":388,"mtime":1699210146928,"results":"9","hashOfConfig":"8"},{"size":540,"mtime":1699177972016,"results":"10","hashOfConfig":"8"},{"size":1627,"mtime":1699210146955,"results":"11","hashOfConfig":"8"},{"size":3096,"mtime":1699210146935,"results":"12","hashOfConfig":"8"},{"size":2223,"mtime":1699202053549,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"c4ptps",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},"C:\\Users\\조연제\\OneDrive\\바탕 화면\\BC\\Spring 2023\\Software Engineering\\pocketprof\\src\\index.js",[],[],"C:\\Users\\조연제\\OneDrive\\바탕 화면\\BC\\Spring 2023\\Software Engineering\\pocketprof\\src\\App.tsx",["35","36"],[],"import React from 'react';\r\nimport Header from './components/Header'\r\nimport UploadImage from './components/UploadImg';\r\nimport AnswerBoxes from './components/AnswerBoxes';\r\nimport GenerateFeedback from './components/GenFeedback';\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <UploadImage />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;","C:\\Users\\조연제\\OneDrive\\바탕 화면\\BC\\Spring 2023\\Software Engineering\\pocketprof\\src\\components\\Header.tsx",["37"],[],"C:\\Users\\조연제\\OneDrive\\바탕 화면\\BC\\Spring 2023\\Software Engineering\\pocketprof\\src\\components\\GenFeedback.tsx",[],[],"C:\\Users\\조연제\\OneDrive\\바탕 화면\\BC\\Spring 2023\\Software Engineering\\pocketprof\\src\\components\\AnswerBoxes.tsx",[],[],"C:\\Users\\조연제\\OneDrive\\바탕 화면\\BC\\Spring 2023\\Software Engineering\\pocketprof\\src\\components\\UploadImg.tsx",["38"],[],"import React, { useState, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport AnswerBoxes from './AnswerBoxes'; // Import the AnswerBoxes component\r\n\r\n\r\nconst UploadImg: React.FC = () => {\r\n  const [selectedFile, setSelectedFile] = useState<File | null>(null);\r\n  const [fileName, setFileName] = useState<string>('');\r\n  const [extractedText, setExtractedText] = useState<string>('');\r\n  const [isUploading, setIsUploading] = useState<boolean>(false);\r\n  const fileInputRef = useRef<HTMLInputElement>(null);\r\n\r\n\r\n  const handleFileChange = async (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (event.target.files && event.target.files[0]) {\r\n      const newFile = event.target.files[0];\r\n      setSelectedFile(newFile);\r\n      setFileName(newFile.name); // Display the file name\r\n      setExtractedText(''); // Clear the previous extracted text\r\n      await handleUpload(newFile); // Trigger upload after file selection\r\n    }\r\n  };\r\n\r\n  const handleUpload = async (file: File) => {\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n    setIsUploading(true);\r\n\r\n    try {\r\n      const response = await axios.post('http://127.0.0.1:5000/upload', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      });\r\n      setExtractedText(response.data.result); // Ensure that response.data has a 'result' property\r\n    } catch (error) {\r\n      console.error('Error uploading file:', error);\r\n      setExtractedText('Error: Could not extract text. Please try again.');\r\n    } finally {\r\n      setIsUploading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <label>Please upload an image (png/jpeg): </label>\r\n      <input\r\n        type=\"file\"\r\n        onChange={handleFileChange}\r\n        accept=\"image/png, image/jpeg\"\r\n        ref={fileInputRef}\r\n        style={{ display: 'none' }}\r\n      />\r\n      <button onClick={() => fileInputRef.current?.click()} disabled={isUploading}>\r\n        {isUploading ? 'Uploading...' : 'Upload and Parse Image'}\r\n      </button>\r\n      {fileName && <div>Selected file: {fileName}</div>}\r\n      \r\n      <AnswerBoxes extractedText={extractedText} />\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadImg;\r\n",["39","40","41","42","43","44"],{"ruleId":"45","severity":1,"message":"46","line":4,"column":8,"nodeType":"47","messageId":"48","endLine":4,"endColumn":19},{"ruleId":"45","severity":1,"message":"49","line":5,"column":8,"nodeType":"47","messageId":"48","endLine":5,"endColumn":24},{"ruleId":"50","severity":1,"message":"51","line":13,"column":5,"nodeType":"52","endLine":13,"endColumn":101},{"ruleId":"45","severity":1,"message":"53","line":5,"column":10,"nodeType":"47","messageId":"48","endLine":5,"endColumn":22},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},"@typescript-eslint/no-unused-vars","'AnswerBoxes' is defined but never used.","Identifier","unusedVar","'GenerateFeedback' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'selectedFile' is assigned a value but never used.","dot-location",[],"new-parens",[],"no-mixed-operators",[],"no-new-object",["66"],"no-whitespace-before-property",[],"rest-spread-spacing",[],"no-object-constructor"]