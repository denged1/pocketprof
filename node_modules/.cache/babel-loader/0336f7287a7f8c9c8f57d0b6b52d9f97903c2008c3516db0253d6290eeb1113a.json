{"ast":null,"code":"var _jsxFileName = \"/Users/edwar2/Desktop/pocketprof/src/components/AnswerBoxes.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\n\n// Define the props that this component will accept\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AnswerBoxes = ({\n  extractedText\n}) => {\n  _s();\n  const [question, setQuestion] = useState('');\n  const [userAnswer, setUserAnswer] = useState('');\n  const [correctAnswer, setCorrectAnswer] = useState('');\n\n  // Parse the JSON whenever the extractedText prop changes\n  useEffect(() => {\n    try {\n      const parsedData = JSON.parse(extractedText);\n      setQuestion(parsedData.Question);\n      setUserAnswer(parsedData.YourAnswer);\n      setCorrectAnswer(parsedData.CorrectAnswer);\n    } catch (error) {\n      console.error('Error parsing JSON:', error);\n    }\n  }, [extractedText]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"answerBoxes\",\n    className: \"rounded-box\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(AnswerBoxes, \"zPujXHaMnks39H6cvY6nyvAPieE=\");\n_c = AnswerBoxes;\nexport default AnswerBoxes;\nvar _c;\n$RefreshReg$(_c, \"AnswerBoxes\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","AnswerBoxes","extractedText","_s","question","setQuestion","userAnswer","setUserAnswer","correctAnswer","setCorrectAnswer","parsedData","JSON","parse","Question","YourAnswer","CorrectAnswer","error","console","id","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/edwar2/Desktop/pocketprof/src/components/AnswerBoxes.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\n// Define the props that this component will accept\ntype AnswerBoxesProps = {\n  extractedText: string;\n};\n\nconst AnswerBoxes: React.FC<AnswerBoxesProps> = ({ extractedText }) => {\n  const [question, setQuestion] = useState('');\n  const [userAnswer, setUserAnswer] = useState('');\n  const [correctAnswer, setCorrectAnswer] = useState('');\n\n  // Parse the JSON whenever the extractedText prop changes\n  useEffect(() => {\n    try {\n      const parsedData = JSON.parse(extractedText);\n      setQuestion(parsedData.Question);\n      setUserAnswer(parsedData.YourAnswer);\n      setCorrectAnswer(parsedData.CorrectAnswer);\n    } catch (error) {\n      console.error('Error parsing JSON:', error);\n    }\n  }, [extractedText]);\n\n  return (\n    <div id=\"answerBoxes\" className=\"rounded-box\">\n      {/* ... textareas for question, userAnswer, and correctAnswer ... */}\n    </div>\n  );\n};\n\nexport default AnswerBoxes;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;;AAElD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAKA,MAAMC,WAAuC,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EACrE,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACU,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;;EAEtD;EACAD,SAAS,CAAC,MAAM;IACd,IAAI;MACF,MAAMa,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACV,aAAa,CAAC;MAC5CG,WAAW,CAACK,UAAU,CAACG,QAAQ,CAAC;MAChCN,aAAa,CAACG,UAAU,CAACI,UAAU,CAAC;MACpCL,gBAAgB,CAACC,UAAU,CAACK,aAAa,CAAC;IAC5C,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C;EACF,CAAC,EAAE,CAACd,aAAa,CAAC,CAAC;EAEnB,oBACEF,OAAA;IAAKkB,EAAE,EAAC,aAAa;IAACC,SAAS,EAAC;EAAa;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAExC,CAAC;AAEV,CAAC;AAACpB,EAAA,CAtBIF,WAAuC;AAAAuB,EAAA,GAAvCvB,WAAuC;AAwB7C,eAAeA,WAAW;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}