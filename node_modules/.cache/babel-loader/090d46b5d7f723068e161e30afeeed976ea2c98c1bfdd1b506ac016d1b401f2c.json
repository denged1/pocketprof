{"ast":null,"code":"var _jsxFileName = \"/Users/edwar2/Desktop/pocketprof/src/components/AnswerBoxes.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport GenFeedback from \"./GenFeedback\";\n\n// Define the props that this component will accept\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AnswerBoxes = ({\n  extractedText\n}) => {\n  _s();\n  const [question, setQuestion] = useState('');\n  const [userAnswer, setUserAnswer] = useState('');\n  const [correctAnswer, setCorrectAnswer] = useState('');\n  const [contentVisible, setContentVisible] = useState(false); // New state to manage visibility\n  const [feedbackRequested, setFeedbackRequested] = useState(false);\n  const handleGenerateFeedback = () => {\n    // Set a flag to indicate feedback was requested\n    setFeedbackRequested(true);\n  };\n\n  // Parse the JSON whenever the extractedText prop changes\n  useEffect(() => {\n    try {\n      const parsedData = JSON.parse(extractedText);\n      setQuestion(parsedData.Question);\n      setUserAnswer(parsedData.YourAnswer);\n      setCorrectAnswer(parsedData.CorrectAnswer);\n    } catch (error) {\n      console.error('Error parsing JSON:', error);\n    }\n  }, [extractedText]);\n  useEffect(() => {\n    setContentVisible(!!extractedText); // The content is visible if extractedText is not empty\n  }, [extractedText]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"answerBoxes\",\n    className: `rounded-box ${contentVisible ? '' : 'hidden'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          fontWeight: 'bold',\n          marginRight: '610px'\n        },\n        children: \"Question:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: question,\n        onChange: e => setQuestion(e.target.value),\n        style: {\n          width: '700px',\n          height: '150px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          fontWeight: 'bold',\n          marginRight: '580px'\n        },\n        children: \"Your Answer:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: userAnswer,\n        onChange: e => setUserAnswer(e.target.value),\n        style: {\n          width: '700px',\n          height: '150px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          fontWeight: 'bold',\n          marginRight: '550px'\n        },\n        children: \"Correct Answer:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: correctAnswer,\n        onChange: e => setCorrectAnswer(e.target.value),\n        style: {\n          width: '700px',\n          height: '150px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGenerateFeedback,\n      style: {\n        marginTop: '25px',\n        padding: '10px'\n      },\n      children: \"Generate Feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), feedbackRequested && /*#__PURE__*/_jsxDEV(GenFeedback, {\n      question: question,\n      userAnswer: userAnswer,\n      correctAnswer: correctAnswer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(AnswerBoxes, \"SH0S3dCNiuC7CqCyBNnPsoZNkZo=\");\n_c = AnswerBoxes;\nexport default AnswerBoxes;\nvar _c;\n$RefreshReg$(_c, \"AnswerBoxes\");","map":{"version":3,"names":["React","useEffect","useState","GenFeedback","jsxDEV","_jsxDEV","AnswerBoxes","extractedText","_s","question","setQuestion","userAnswer","setUserAnswer","correctAnswer","setCorrectAnswer","contentVisible","setContentVisible","feedbackRequested","setFeedbackRequested","handleGenerateFeedback","parsedData","JSON","parse","Question","YourAnswer","CorrectAnswer","error","console","id","className","children","style","fontWeight","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","width","height","onClick","marginTop","padding","_c","$RefreshReg$"],"sources":["/Users/edwar2/Desktop/pocketprof/src/components/AnswerBoxes.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport GenFeedback from \"./GenFeedback\";\n\n// Define the props that this component will accept\ntype AnswerBoxesProps = {\n  extractedText: string;\n};\n\nconst AnswerBoxes: React.FC<AnswerBoxesProps> = ({ extractedText }) => {\n  const [question, setQuestion] = useState('');\n  const [userAnswer, setUserAnswer] = useState('');\n  const [correctAnswer, setCorrectAnswer] = useState('');\n  const [contentVisible, setContentVisible] = useState(false); // New state to manage visibility\n  const [feedbackRequested, setFeedbackRequested] = useState(false);\n\n\n  const handleGenerateFeedback = () => {\n    // Set a flag to indicate feedback was requested\n    setFeedbackRequested(true);\n  };\n\n  // Parse the JSON whenever the extractedText prop changes\n  useEffect(() => {\n    try {\n      const parsedData = JSON.parse(extractedText);\n      setQuestion(parsedData.Question);\n      setUserAnswer(parsedData.YourAnswer);\n      setCorrectAnswer(parsedData.CorrectAnswer);\n    } catch (error) {\n      console.error('Error parsing JSON:', error);\n    }\n  }, [extractedText]);\n  useEffect(() => {\n    setContentVisible(!!extractedText); // The content is visible if extractedText is not empty\n  }, [extractedText]);\n\n  return (\n    <div id=\"answerBoxes\" className={`rounded-box ${contentVisible ? '' : 'hidden'}`}>\n      {/* Content is always rendered, but visibility is controlled by contentVisible state */}\n      <div>\n        <label style={{ fontWeight: 'bold', marginRight: '610px' }}>Question:</label>\n        <br />\n        <textarea value={question} onChange={(e) => setQuestion(e.target.value)} style={{ width: '700px', height: '150px' }} />\n      </div>\n      <div>\n        <label style={{ fontWeight: 'bold', marginRight: '580px' }}>Your Answer:</label>\n        <br />\n        <textarea value={userAnswer} onChange={(e) => setUserAnswer(e.target.value)} style={{ width: '700px', height: '150px' }} />\n      </div>\n      <div>\n        <label style={{ fontWeight: 'bold', marginRight: '550px' }}>Correct Answer:</label>\n        <br />\n        <textarea value={correctAnswer} onChange={(e) => setCorrectAnswer(e.target.value)} style={{ width: '700px', height: '150px' }} />\n      </div>\n      <button onClick={handleGenerateFeedback} style={{ marginTop: '25px', padding: '10px' }}>Generate Feedback</button>\n      {feedbackRequested && (\n        <GenFeedback\n          question={question}\n          userAnswer={userAnswer}\n          correctAnswer={correctAnswer}\n        />\n      )}\n    </div>\n  );\n};\n\n\nexport default AnswerBoxes;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}