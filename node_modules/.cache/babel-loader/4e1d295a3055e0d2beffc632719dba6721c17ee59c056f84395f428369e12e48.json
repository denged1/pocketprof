{"ast":null,"code":"var _jsxFileName = \"/Users/edwar2/Desktop/pocketprof/src/components/UploadImg.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport axios from 'axios';\nimport AnswerBoxes from './AnswerBoxes'; // Import the AnswerBoxes component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadImg = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [fileName, setFileName] = useState('');\n  const [extractedText, setExtractedText] = useState('');\n  const [isUploading, setIsUploading] = useState(false);\n  const fileInputRef = useRef(null);\n  const handleFileChange = async event => {\n    if (event.target.files && event.target.files[0]) {\n      const newFile = event.target.files[0];\n      setSelectedFile(newFile);\n      setFileName(newFile.name); // Display the file name\n      setExtractedText(''); // Clear the previous extracted text\n      await handleUpload(newFile); // Trigger upload after file selection\n    }\n  };\n\n  const handleUpload = async file => {\n    const formData = new FormData();\n    formData.append('file', file);\n    setIsUploading(true);\n    try {\n      const response = await axios.post('http://127.0.0.1:5000/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setExtractedText(response.data.result); // Ensure that response.data has a 'result' property\n    } catch (error) {\n      console.error('Error uploading file:', error);\n      setExtractedText('Error: Could not extract text. Please try again.');\n    } finally {\n      setIsUploading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: \"Please upload an image (png/jpeg): \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange,\n      accept: \"image/png, image/jpeg\",\n      ref: fileInputRef,\n      style: {\n        display: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        var _fileInputRef$current;\n        return (_fileInputRef$current = fileInputRef.current) === null || _fileInputRef$current === void 0 ? void 0 : _fileInputRef$current.click();\n      },\n      disabled: isUploading,\n      children: isUploading ? 'Uploading...' : 'Upload and Parse Image'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), fileName && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Selected file: \", fileName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(AnswerBoxes, {\n      extractedText: extractedText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadImg, \"ByjgTVGSaYQvpVp5+fzQzxcBlWM=\");\n_c = UploadImg;\nexport default UploadImg;\nvar _c;\n$RefreshReg$(_c, \"UploadImg\");","map":{"version":3,"names":["React","useState","useRef","axios","AnswerBoxes","jsxDEV","_jsxDEV","UploadImg","_s","selectedFile","setSelectedFile","fileName","setFileName","extractedText","setExtractedText","isUploading","setIsUploading","fileInputRef","handleFileChange","event","target","files","newFile","name","handleUpload","file","formData","FormData","append","response","post","headers","data","result","error","console","children","_jsxFileName","lineNumber","columnNumber","type","onChange","accept","ref","style","display","onClick","_fileInputRef$current","current","click","disabled","_c","$RefreshReg$"],"sources":["/Users/edwar2/Desktop/pocketprof/src/components/UploadImg.tsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport axios from 'axios';\nimport AnswerBoxes from './AnswerBoxes'; // Import the AnswerBoxes component\n\n\nconst UploadImg: React.FC = () => {\n  const [selectedFile, setSelectedFile] = useState<File | null>(null);\n  const [fileName, setFileName] = useState<string>('');\n  const [extractedText, setExtractedText] = useState<string>('');\n  const [isUploading, setIsUploading] = useState<boolean>(false);\n  const fileInputRef = useRef<HTMLInputElement>(null);\n\n\n  const handleFileChange = async (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.files && event.target.files[0]) {\n      const newFile = event.target.files[0];\n      setSelectedFile(newFile);\n      setFileName(newFile.name); // Display the file name\n      setExtractedText(''); // Clear the previous extracted text\n      await handleUpload(newFile); // Trigger upload after file selection\n    }\n  };\n\n  const handleUpload = async (file: File) => {\n    const formData = new FormData();\n    formData.append('file', file);\n    setIsUploading(true);\n\n    try {\n      const response = await axios.post('http://127.0.0.1:5000/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      setExtractedText(response.data.result); // Ensure that response.data has a 'result' property\n    } catch (error) {\n      console.error('Error uploading file:', error);\n      setExtractedText('Error: Could not extract text. Please try again.');\n    } finally {\n      setIsUploading(false);\n    }\n  };\n\n  return (\n    <div>\n      <label>Please upload an image (png/jpeg): </label>\n      <input\n        type=\"file\"\n        onChange={handleFileChange}\n        accept=\"image/png, image/jpeg\"\n        ref={fileInputRef}\n        style={{ display: 'none' }}\n      />\n      <button onClick={() => fileInputRef.current?.click()} disabled={isUploading}>\n        {isUploading ? 'Uploading...' : 'Upload and Parse Image'}\n      </button>\n      {fileName && <div>Selected file: {fileName}</div>}\n      \n      <AnswerBoxes extractedText={extractedText} />\n      \n    </div>\n  );\n};\n\nexport default UploadImg;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}