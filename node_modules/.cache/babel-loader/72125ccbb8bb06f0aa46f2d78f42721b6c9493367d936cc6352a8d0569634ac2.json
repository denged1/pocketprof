{"ast":null,"code":"var _jsxFileName = \"/Users/edwar2/Desktop/pocketprof/src/components/UploadImg.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadImage = () => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [extractedText, setExtractedText] = useState('');\n  const [isUploading, setIsUploading] = useState(false);\n  const handleFileChange = event => {\n    if (event.target.files && event.target.files[0]) {\n      setSelectedFile(event.target.files[0]);\n      setExtractedText(''); // Clear the previous extracted text\n    }\n  };\n\n  const handleUpload = async () => {\n    if (selectedFile) {\n      const formData = new FormData();\n      formData.append('file', selectedFile);\n      setIsUploading(true);\n      try {\n        const response = await axios.post('http://127.0.0.1:5000/upload', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        setExtractedText(response.data.result);\n      } catch (error) {\n        console.error('Error uploading file:', error);\n        setExtractedText('Error: Could not extract text. Please try again.');\n      } finally {\n        setIsUploading(false);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange,\n      accept: \"image/png, image/jpeg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      disabled: isUploading,\n      children: isUploading ? 'Uploading...' : 'Upload and Parse Image'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), extractedText && /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: extractedText,\n      readOnly: true,\n      style: {\n        width: '100%',\n        height: '150px',\n        marginTop: '10px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadImage, \"spIaN4/9IdRH+EkOr77tiYGkYLk=\");\n_c = UploadImage;\nexport default UploadImage;\nvar _c;\n$RefreshReg$(_c, \"UploadImage\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","UploadImage","_s","selectedFile","setSelectedFile","extractedText","setExtractedText","isUploading","setIsUploading","handleFileChange","event","target","files","handleUpload","formData","FormData","append","response","post","headers","data","result","error","console","children","type","onChange","accept","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","value","readOnly","style","width","height","marginTop","_c","$RefreshReg$"],"sources":["/Users/edwar2/Desktop/pocketprof/src/components/UploadImg.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst UploadImage: React.FC = () => {\n  const [selectedFile, setSelectedFile] = useState<File | null>(null);\n  const [extractedText, setExtractedText] = useState<string>('');\n  const [isUploading, setIsUploading] = useState<boolean>(false);\n\n  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.files && event.target.files[0]) {\n      setSelectedFile(event.target.files[0]);\n      setExtractedText(''); // Clear the previous extracted text\n    }\n  };\n\n  const handleUpload = async () => {\n    if (selectedFile) {\n      const formData = new FormData();\n      formData.append('file', selectedFile);\n      setIsUploading(true);\n\n      try {\n        const response = await axios.post('http://127.0.0.1:5000/upload', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        setExtractedText(response.data.result);\n      } catch (error) {\n        console.error('Error uploading file:', error);\n        setExtractedText('Error: Could not extract text. Please try again.');\n      } finally {\n        setIsUploading(false);\n      }\n    }\n  };\n\n  return (\n    <div>\n      <input type=\"file\" onChange={handleFileChange} accept=\"image/png, image/jpeg\" />\n      <button onClick={handleUpload} disabled={isUploading}>\n        {isUploading ? 'Uploading...' : 'Upload and Parse Image'}\n      </button>\n      {extractedText && (\n        <textarea\n          value={extractedText}\n          readOnly\n          style={{ width: '100%', height: '150px', marginTop: '10px' }}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default UploadImage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAAqB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAc,IAAI,CAAC;EACnE,MAAM,CAACQ,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAS,EAAE,CAAC;EAC9D,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAU,KAAK,CAAC;EAE9D,MAAMY,gBAAgB,GAAIC,KAA0C,IAAK;IACvE,IAAIA,KAAK,CAACC,MAAM,CAACC,KAAK,IAAIF,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,EAAE;MAC/CR,eAAe,CAACM,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;MACtCN,gBAAgB,CAAC,EAAE,CAAC,CAAC,CAAC;IACxB;EACF,CAAC;;EAED,MAAMO,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAIV,YAAY,EAAE;MAChB,MAAMW,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEb,YAAY,CAAC;MACrCK,cAAc,CAAC,IAAI,CAAC;MAEpB,IAAI;QACF,MAAMS,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,IAAI,CAAC,8BAA8B,EAAEJ,QAAQ,EAAE;UAC1EK,OAAO,EAAE;YACP,cAAc,EAAE;UAClB;QACF,CAAC,CAAC;QACFb,gBAAgB,CAACW,QAAQ,CAACG,IAAI,CAACC,MAAM,CAAC;MACxC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC7ChB,gBAAgB,CAAC,kDAAkD,CAAC;MACtE,CAAC,SAAS;QACRE,cAAc,CAAC,KAAK,CAAC;MACvB;IACF;EACF,CAAC;EAED,oBACER,OAAA;IAAAwB,QAAA,gBACExB,OAAA;MAAOyB,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAEjB,gBAAiB;MAACkB,MAAM,EAAC;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChF/B,OAAA;MAAQgC,OAAO,EAAEnB,YAAa;MAACoB,QAAQ,EAAE1B,WAAY;MAAAiB,QAAA,EAClDjB,WAAW,GAAG,cAAc,GAAG;IAAwB;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC,EACR1B,aAAa,iBACZL,OAAA;MACEkC,KAAK,EAAE7B,aAAc;MACrB8B,QAAQ;MACRC,KAAK,EAAE;QAAEC,KAAK,EAAE,MAAM;QAAEC,MAAM,EAAE,OAAO;QAAEC,SAAS,EAAE;MAAO;IAAE;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9D,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC7B,EAAA,CAjDID,WAAqB;AAAAuC,EAAA,GAArBvC,WAAqB;AAmD3B,eAAeA,WAAW;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}