{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uC870\\uC5F0\\uC81C\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\BC\\\\Spring 2023\\\\Software Engineering\\\\pocketprof\\\\src\\\\components\\\\UploadImg.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadImg = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const fileInputRef = useRef(null);\n  const handleFileChange = event => {\n    if (event.target.files && event.target.files[0]) {\n      setFile(event.target.files[0]);\n    }\n  };\n\n  //   return (\n  //     <div id=\"uploadImage\">\n  //       {/* <button style={{display: 'block', width:'120px', height:'30px', onClick='document.getElementById('getFile').click()'}}>Choose Image</button> */}\n  //       {/* <input type=\"file\" id=\"getFile\" onChange={handleFileChange} accept=\"image/png, image/jpeg\" /> */}\n  //       <label>\n  //         Choose Image\n  //       </label>\n  //       <input type=\"file\" id=\"getFile\" onChange={handleFileChange} accept=\"image/png, image/jpeg\" />\n  //     </div>\n\n  //   );\n  // };\n\n  // export default UploadImg;\n\n  const openFileInput = () => {\n    if (fileInputRef.current) {\n      fileInputRef.current.click();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"uploadImage\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      id: \"getFile\",\n      ref: fileInputRef,\n      style: {\n        display: 'none'\n      },\n      onChange: handleFileChange,\n      accept: \"image/png, image/jpeg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"getFile\",\n      className: \"custom-choose-image-button\",\n      onClick: openFileInput,\n      children: \"Choose Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 3\n  }, this);\n};\n_s(UploadImg, \"kNILOh2iWJ4R/9q826rTQ3S5DBI=\");\n_c = UploadImg;\nexport default UploadImg;\n\n// const buttonStyle = {\n//   display: 'block',\n//   width: '200px', // Change the width to make it bigger\n//   height: '50px', // Change the height to make it bigger\n//   textAlign: 'center', // Center the text\n//   lineHeight: '50px', // Vertically center the text\n//   backgroundColor: 'lightblue', // Change the background color\n//   color: 'white', // Change the text color\n//   cursor: 'pointer', // Change the cursor on hover\n// };\n\n// return (\n//   <div id=\"uploadImage\">\n//     <label htmlFor=\"getFile\" style={buttonStyle} className=\"choose-image-button\">\n//       Choose Image\n//     </label>\n//     <input type=\"file\" id=\"getFile\" onChange={handleFileChange} accept=\"image/png, image/jpeg\" />\n//   </div>\n// );\n// };\n\n// export default UploadImg;\nvar _c;\n$RefreshReg$(_c, \"UploadImg\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","UploadImg","_s","file","setFile","fileInputRef","handleFileChange","event","target","files","openFileInput","current","click","id","children","type","ref","style","display","onChange","accept","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","className","onClick","_c","$RefreshReg$"],"sources":["C:/Users/조연제/OneDrive/바탕 화면/BC/Spring 2023/Software Engineering/pocketprof/src/components/UploadImg.tsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\n\r\nconst UploadImg: React.FC = () => {\r\n  const [file, setFile] = useState<File | null>(null);\r\n  const fileInputRef = useRef(null);\r\n\r\n\r\n  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (event.target.files && event.target.files[0]) {\r\n      setFile(event.target.files[0]);\r\n    }\r\n  };\r\n\r\n//   return (\r\n//     <div id=\"uploadImage\">\r\n//       {/* <button style={{display: 'block', width:'120px', height:'30px', onClick='document.getElementById('getFile').click()'}}>Choose Image</button> */}\r\n//       {/* <input type=\"file\" id=\"getFile\" onChange={handleFileChange} accept=\"image/png, image/jpeg\" /> */}\r\n//       <label>\r\n//         Choose Image\r\n//       </label>\r\n//       <input type=\"file\" id=\"getFile\" onChange={handleFileChange} accept=\"image/png, image/jpeg\" />\r\n//     </div>\r\n    \r\n//   );\r\n// };\r\n\r\n\r\n\r\n// export default UploadImg;\r\n\r\n\r\nconst openFileInput = () => {\r\n  if (fileInputRef.current) {\r\n    fileInputRef.current.click();\r\n  }\r\n};\r\n\r\nreturn (\r\n  <div id=\"uploadImage\">\r\n    <input\r\n      type=\"file\"\r\n      id=\"getFile\"\r\n      ref={fileInputRef}\r\n      style={{ display: 'none' }}\r\n      onChange={handleFileChange}\r\n      accept=\"image/png, image/jpeg\"\r\n    />\r\n    <label htmlFor=\"getFile\" className=\"custom-choose-image-button\" onClick={openFileInput}>\r\n      Choose Image\r\n    </label>\r\n  </div>\r\n);\r\n};\r\n\r\nexport default UploadImg;\r\n\r\n// const buttonStyle = {\r\n//   display: 'block',\r\n//   width: '200px', // Change the width to make it bigger\r\n//   height: '50px', // Change the height to make it bigger\r\n//   textAlign: 'center', // Center the text\r\n//   lineHeight: '50px', // Vertically center the text\r\n//   backgroundColor: 'lightblue', // Change the background color\r\n//   color: 'white', // Change the text color\r\n//   cursor: 'pointer', // Change the cursor on hover\r\n// };\r\n\r\n// return (\r\n//   <div id=\"uploadImage\">\r\n//     <label htmlFor=\"getFile\" style={buttonStyle} className=\"choose-image-button\">\r\n//       Choose Image\r\n//     </label>\r\n//     <input type=\"file\" id=\"getFile\" onChange={handleFileChange} accept=\"image/png, image/jpeg\" />\r\n//   </div>\r\n// );\r\n// };\r\n\r\n// export default UploadImg;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,SAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAc,IAAI,CAAC;EACnD,MAAMQ,YAAY,GAAGP,MAAM,CAAC,IAAI,CAAC;EAGjC,MAAMQ,gBAAgB,GAAIC,KAA0C,IAAK;IACvE,IAAIA,KAAK,CAACC,MAAM,CAACC,KAAK,IAAIF,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,EAAE;MAC/CL,OAAO,CAACG,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;IAChC;EACF,CAAC;;EAEH;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAIA;;EAGA,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAIL,YAAY,CAACM,OAAO,EAAE;MACxBN,YAAY,CAACM,OAAO,CAACC,KAAK,CAAC,CAAC;IAC9B;EACF,CAAC;EAED,oBACEZ,OAAA;IAAKa,EAAE,EAAC,aAAa;IAAAC,QAAA,gBACnBd,OAAA;MACEe,IAAI,EAAC,MAAM;MACXF,EAAE,EAAC,SAAS;MACZG,GAAG,EAAEX,YAAa;MAClBY,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAO,CAAE;MAC3BC,QAAQ,EAAEb,gBAAiB;MAC3Bc,MAAM,EAAC;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,eACFxB,OAAA;MAAOyB,OAAO,EAAC,SAAS;MAACC,SAAS,EAAC,4BAA4B;MAACC,OAAO,EAAEjB,aAAc;MAAAI,QAAA,EAAC;IAExF;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAER,CAAC;AAACtB,EAAA,CAlDID,SAAmB;AAAA2B,EAAA,GAAnB3B,SAAmB;AAoDzB,eAAeA,SAAS;;AAExB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}