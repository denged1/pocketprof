{"ast":null,"code":"var _jsxFileName = \"/Users/edwar2/Desktop/pocketprof/src/components/GenFeedback.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GenFeedback = ({\n  question,\n  userAnswer,\n  correctAnswer\n}) => {\n  _s();\n  const [feedback, setFeedback] = useState('');\n  const fetchFeedback = async () => {\n    try {\n      const response = await axios.post('http://127.0.0.1:5000/generate-feedback', {\n        question,\n        userAnswer,\n        correctAnswer\n      });\n      setFeedback(response.data.feedback);\n    } catch (error) {\n      console.error('Error fetching feedback:', error);\n      setFeedback('Error: Could not generate feedback. Please try again.');\n    }\n  };\n  useEffect(() => {\n    fetchFeedback();\n  }, [question, userAnswer, correctAnswer]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"generateFeedback\",\n    style: {\n      display: 'flex',\n      justifyContent: 'center',\n      padding: '0 0 70px'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: feedback,\n      readOnly: true,\n      style: {\n        width: '70%',\n        // Set width to 70%\n        height: '200px',\n        marginTop: '10px',\n        fontFamily: 'Calibri, sans-serif',\n        // Set font to Calibri\n        fontSize: '16px',\n        // Set font size to 16\n        textAlign: 'left',\n        // Center the text inside the textarea\n        border: '1px solid #ccc',\n        // Optional: adds a border\n        borderRadius: '4px',\n        // Optional: rounds the corners\n        padding: '10px',\n        // Optional: adds some padding inside the textarea\n        resize: 'none' // Prevents resizing\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(GenFeedback, \"NT2w/Qczy/DEDlRLr00QUALflXo=\");\n_c = GenFeedback;\nexport default GenFeedback;\nvar _c;\n$RefreshReg$(_c, \"GenFeedback\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","GenFeedback","question","userAnswer","correctAnswer","_s","feedback","setFeedback","fetchFeedback","response","post","data","error","console","id","style","display","justifyContent","padding","children","value","readOnly","width","height","marginTop","fontFamily","fontSize","textAlign","border","borderRadius","resize","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/edwar2/Desktop/pocketprof/src/components/GenFeedback.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst GenFeedback: React.FC<{\n  question: string;\n  userAnswer: string;\n  correctAnswer: string;\n}> = ({ question, userAnswer, correctAnswer }) => {\n  const [feedback, setFeedback] = useState('');\n\n  const fetchFeedback = async () => {\n    try {\n      const response = await axios.post('http://127.0.0.1:5000/generate-feedback', {\n        question,\n        userAnswer,\n        correctAnswer\n      });\n      setFeedback(response.data.feedback);\n    } catch (error) {\n      console.error('Error fetching feedback:', error);\n      setFeedback('Error: Could not generate feedback. Please try again.');\n    }\n  };\n\n  useEffect(() => {\n    fetchFeedback();\n  }, [question, userAnswer, correctAnswer]);\n\n  return (\n    <div id=\"generateFeedback\" style={{ display: 'flex', justifyContent: 'center', padding: '0 0 70px' }}>\n      <textarea\n        value={feedback}\n        readOnly\n        style={{\n          width: '70%', // Set width to 70%\n          height: '200px',\n          marginTop: '10px',\n          fontFamily: 'Calibri, sans-serif', // Set font to Calibri\n          fontSize: '16px', // Set font size to 16\n          textAlign: 'left', // Center the text inside the textarea\n          border: '1px solid #ccc', // Optional: adds a border\n          borderRadius: '4px', // Optional: rounds the corners\n          padding: '10px', // Optional: adds some padding inside the textarea\n          resize: 'none', // Prevents resizing\n        }}\n      />\n    </div>\n  );\n};\n\nexport default GenFeedback;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,WAIJ,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,UAAU;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EAChD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMY,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,IAAI,CAAC,yCAAyC,EAAE;QAC3ER,QAAQ;QACRC,UAAU;QACVC;MACF,CAAC,CAAC;MACFG,WAAW,CAACE,QAAQ,CAACE,IAAI,CAACL,QAAQ,CAAC;IACrC,CAAC,CAAC,OAAOM,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChDL,WAAW,CAAC,uDAAuD,CAAC;IACtE;EACF,CAAC;EAEDV,SAAS,CAAC,MAAM;IACdW,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACN,QAAQ,EAAEC,UAAU,EAAEC,aAAa,CAAC,CAAC;EAEzC,oBACEJ,OAAA;IAAKc,EAAE,EAAC,kBAAkB;IAACC,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,cAAc,EAAE,QAAQ;MAAEC,OAAO,EAAE;IAAW,CAAE;IAAAC,QAAA,eACnGnB,OAAA;MACEoB,KAAK,EAAEd,QAAS;MAChBe,QAAQ;MACRN,KAAK,EAAE;QACLO,KAAK,EAAE,KAAK;QAAE;QACdC,MAAM,EAAE,OAAO;QACfC,SAAS,EAAE,MAAM;QACjBC,UAAU,EAAE,qBAAqB;QAAE;QACnCC,QAAQ,EAAE,MAAM;QAAE;QAClBC,SAAS,EAAE,MAAM;QAAE;QACnBC,MAAM,EAAE,gBAAgB;QAAE;QAC1BC,YAAY,EAAE,KAAK;QAAE;QACrBX,OAAO,EAAE,MAAM;QAAE;QACjBY,MAAM,EAAE,MAAM,CAAE;MAClB;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC7B,EAAA,CA7CIJ,WAIJ;AAAAkC,EAAA,GAJIlC,WAIJ;AA2CF,eAAeA,WAAW;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}