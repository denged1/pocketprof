{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\uC870\\uC5F0\\uC81C\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\BC\\\\Spring 2023\\\\Software Engineering\\\\pocketprof\\\\src\\\\components\\\\AnswerBoxes.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\n\n// Define the props that this component will accept\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AnswerBoxes = ({\n  extractedText\n}) => {\n  _s();\n  const [question, setQuestion] = useState('');\n  const [userAnswer, setUserAnswer] = useState('');\n  const [correctAnswer, setCorrectAnswer] = useState('');\n  const [contentVisible, setContentVisible] = useState(false); // New state to manage visibility\n\n  // Parse the JSON whenever the extractedText prop changes\n  useEffect(() => {\n    try {\n      const parsedData = JSON.parse(extractedText);\n      setQuestion(parsedData.Question);\n      setUserAnswer(parsedData.YourAnswer);\n      setCorrectAnswer(parsedData.CorrectAnswer);\n    } catch (error) {\n      console.error('Error parsing JSON:', error);\n    }\n  }, [extractedText]);\n  useEffect(() => {\n    setContentVisible(!!extractedText); // The content is visible if extractedText is not empty\n  }, [extractedText]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"answerBoxes\",\n    className: `rounded-box ${contentVisible ? '' : 'hidden'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          fontWeight: 'bold',\n          marginRight: '610px'\n        },\n        children: \"Question:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: question,\n        onChange: e => setQuestion(e.target.value),\n        style: {\n          width: '700px',\n          height: '150px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          fontWeight: 'bold',\n          marginRight: '580px'\n        },\n        children: \"Your Answer:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: userAnswer,\n        onChange: e => setUserAnswer(e.target.value),\n        style: {\n          width: '700px',\n          height: '150px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          fontWeight: 'bold',\n          marginRight: '550px'\n        },\n        children: \"Correct Answer:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: correctAnswer,\n        onChange: e => setCorrectAnswer(e.target.value),\n        style: {\n          width: '700px',\n          height: '150px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this)\n  // </div>\n  ;\n};\n_s(AnswerBoxes, \"/M1I1GHYi8/wNIPjC/wtjEj/fMY=\");\n_c = AnswerBoxes;\nexport default AnswerBoxes;\nvar _c;\n$RefreshReg$(_c, \"AnswerBoxes\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","AnswerBoxes","extractedText","_s","question","setQuestion","userAnswer","setUserAnswer","correctAnswer","setCorrectAnswer","contentVisible","setContentVisible","parsedData","JSON","parse","Question","YourAnswer","CorrectAnswer","error","console","id","className","children","style","fontWeight","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","width","height","_c","$RefreshReg$"],"sources":["C:/Users/조연제/OneDrive/바탕 화면/BC/Spring 2023/Software Engineering/pocketprof/src/components/AnswerBoxes.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\n// Define the props that this component will accept\r\ntype AnswerBoxesProps = {\r\n  extractedText: string;\r\n};\r\n\r\nconst AnswerBoxes: React.FC<AnswerBoxesProps> = ({ extractedText }) => {\r\n  const [question, setQuestion] = useState('');\r\n  const [userAnswer, setUserAnswer] = useState('');\r\n  const [correctAnswer, setCorrectAnswer] = useState('');\r\n  const [contentVisible, setContentVisible] = useState(false); // New state to manage visibility\r\n\r\n\r\n  // Parse the JSON whenever the extractedText prop changes\r\n  useEffect(() => {\r\n    try {\r\n      const parsedData = JSON.parse(extractedText);\r\n      setQuestion(parsedData.Question);\r\n      setUserAnswer(parsedData.YourAnswer);\r\n      setCorrectAnswer(parsedData.CorrectAnswer);\r\n    } catch (error) {\r\n      console.error('Error parsing JSON:', error);\r\n    }\r\n  }, [extractedText]);\r\n  useEffect(() => {\r\n    setContentVisible(!!extractedText); // The content is visible if extractedText is not empty\r\n  }, [extractedText]);\r\n\r\n  return (\r\n    <div id=\"answerBoxes\" className={`rounded-box ${contentVisible ? '' : 'hidden'}`}>\r\n      {/* Content is always rendered, but visibility is controlled by contentVisible state */}\r\n      <div>\r\n        <label style={{ fontWeight: 'bold', marginRight: '610px' }}>Question:</label>\r\n        <br />\r\n        <textarea value={question} onChange={(e) => setQuestion(e.target.value)} style={{ width: '700px', height: '150px' }} />\r\n      </div>\r\n      <div>\r\n        <label style={{ fontWeight: 'bold', marginRight: '580px' }}>Your Answer:</label>\r\n        <br />\r\n        <textarea value={userAnswer} onChange={(e) => setUserAnswer(e.target.value)} style={{ width: '700px', height: '150px' }} />\r\n      </div>\r\n      <div>\r\n        <label style={{ fontWeight: 'bold', marginRight: '550px' }}>Correct Answer:</label>\r\n        <br />\r\n        <textarea value={correctAnswer} onChange={(e) => setCorrectAnswer(e.target.value)} style={{ width: '700px', height: '150px' }} />\r\n      </div>\r\n    </div>\r\n    // </div>\r\n  );\r\n};\r\n\r\n\r\nexport default AnswerBoxes;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}