{"ast":null,"code":"var _jsxFileName = \"/Users/edwar2/Desktop/pocketprof/src/components/UploadImg.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadImage = () => {\n  _s();\n  // Using the state variable names from HEAD\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [extractedText, setExtractedText] = useState('');\n  const [isUploading, setIsUploading] = useState(false);\n\n  // Using the file input ref from your friend's changes\n  const fileInputRef = useRef(null);\n\n  // This handles file selection and clears the extracted text\n  const handleFileChange = event => {\n    if (event.target.files && event.target.files[0]) {\n      setSelectedFile(event.target.files[0]);\n      setExtractedText(''); // Clear the previous extracted text\n    }\n  };\n\n  // This handles the file upload process\n  const handleUpload = async () => {\n    if (selectedFile) {\n      const formData = new FormData();\n      formData.append('file', selectedFile);\n      setIsUploading(true);\n      try {\n        const response = await axios.post('http://127.0.0.1:5000/upload', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        setExtractedText(response.data.result);\n      } catch (error) {\n        console.error('Error uploading file:', error);\n        setExtractedText('Error: Could not extract text. Please try again.');\n      } finally {\n        setIsUploading(false);\n      }\n    }\n  };\n\n  // This function triggers the file input when the button is clicked\n  const handleButtonClick = () => {\n    if (fileInputRef.current) {\n      fileInputRef.current.click();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"getFile\",\n      style: {\n        marginBottom: '10px'\n      },\n      children: \"Please upload an image (png/jpeg): \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      ref: fileInputRef,\n      id: \"getFile\",\n      onChange: handleFileChange,\n      accept: \"image/png, image/jpeg\",\n      style: {\n        display: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleButtonClick,\n      disabled: isUploading,\n      style: {\n        marginBottom: '15px'\n      },\n      children: isUploading ? 'Uploading...' : 'Choose Image'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), extractedText && /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: extractedText,\n      readOnly: true,\n      style: {\n        width: '100%',\n        height: '150px',\n        marginTop: '10px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadImage, \"gL/gJkOH5uHdcDiPlgj0+Od/vn8=\");\n_c = UploadImage;\nexport default UploadImage;\nvar _c;\n$RefreshReg$(_c, \"UploadImage\");","map":{"version":3,"names":["React","useState","useRef","axios","jsxDEV","_jsxDEV","UploadImage","_s","selectedFile","setSelectedFile","extractedText","setExtractedText","isUploading","setIsUploading","fileInputRef","handleFileChange","event","target","files","handleUpload","formData","FormData","append","response","post","headers","data","result","error","console","handleButtonClick","current","click","children","htmlFor","style","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","type","ref","id","onChange","accept","display","onClick","disabled","value","readOnly","width","height","marginTop","_c","$RefreshReg$"],"sources":["/Users/edwar2/Desktop/pocketprof/src/components/UploadImg.tsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport axios from 'axios';\n\nconst UploadImage: React.FC = () => {\n  // Using the state variable names from HEAD\n  const [selectedFile, setSelectedFile] = useState<File | null>(null);\n  const [extractedText, setExtractedText] = useState<string>('');\n  const [isUploading, setIsUploading] = useState<boolean>(false);\n\n  // Using the file input ref from your friend's changes\n  const fileInputRef = useRef<HTMLInputElement>(null);\n\n  // This handles file selection and clears the extracted text\n  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.files && event.target.files[0]) {\n      setSelectedFile(event.target.files[0]);\n      setExtractedText(''); // Clear the previous extracted text\n    }\n  };\n\n  // This handles the file upload process\n  const handleUpload = async () => {\n    if (selectedFile) {\n      const formData = new FormData();\n      formData.append('file', selectedFile);\n      setIsUploading(true);\n\n      try {\n        const response = await axios.post('http://127.0.0.1:5000/upload', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        setExtractedText(response.data.result);\n      } catch (error) {\n        console.error('Error uploading file:', error);\n        setExtractedText('Error: Could not extract text. Please try again.');\n      } finally {\n        setIsUploading(false);\n      }\n    }\n  };\n\n  // This function triggers the file input when the button is clicked\n  const handleButtonClick = () => {\n    if (fileInputRef.current) {\n      fileInputRef.current.click();\n    }\n  };\n\n  return (\n    <div>\n      {/* Adding the label from your friend's changes */}\n      <label htmlFor=\"getFile\" style={{ marginBottom: '10px' }}>Please upload an image (png/jpeg): </label>\n      {/* The file input is hidden, but can be triggered by the button click */}\n      <input\n        type=\"file\"\n        ref={fileInputRef}\n        id=\"getFile\"\n        onChange={handleFileChange}\n        accept=\"image/png, image/jpeg\"\n        style={{ display: 'none' }}\n      />\n      {/* The button from your friend's changes, with the text change while uploading */}\n      <button onClick={handleButtonClick} disabled={isUploading} style={{marginBottom:'15px'}}>\n        {isUploading ? 'Uploading...' : 'Choose Image'}\n      </button>\n      {/* Display the extracted text in a textarea */}\n      {extractedText && (\n        <textarea\n          value={extractedText}\n          readOnly\n          style={{ width: '100%', height: '150px', marginTop: '10px' }}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default UploadImage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}